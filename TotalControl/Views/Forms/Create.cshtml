@model TotalControl.Models.Form

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Form</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.SectionId, "SectionId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("SectionId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SectionId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Procedures, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Procedures, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Procedures, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CorrectiveAction, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CorrectiveAction, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CorrectiveAction, "", new { @class = "text-danger" })
            </div>
        </div>

        
        <div class="form-group" id="container">
            @for (int i = 0; i < Model.Fields.Count; i++)
            {
                @Html.LabelFor(model => Model.Fields[i].Subject, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Fields[i].Subject, new { htmlAttributes = new { @class = "form-control" } })


                </div>
            }                
            
        </div>
        
        
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-primary" />
                <input type="button" value="Add Field" id="btnAdd" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<script src="https://ajax.aspnetcdn.com/ajax/jQuery/jquery-2.0.3.min.js"></script>
<script src="https://code.jquery.com/jquery-3.3.1.js"></script>

<script type="text/javascript">
    var fieldHTML = '<div class="col-md-10"><input class="form-control text-box single-line" name="Fields['+ x +'].Subject" type="text" value="" /></div>';
    var x = 1;

    $(function () {
        $("#btnAdd").click(function () {
            
            $('#container').append(fieldHTML);
            x++;
            ;
        });
    });
</script>